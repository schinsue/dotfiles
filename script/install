#!/bin/sh

# Check the platform
BREW_PACKAGES=(
  "bash"                # might as well get an updated terminal shell
  "cmake"               # Make for YCM (vim)
  "diff-so-fancy"       # A replacement for diff: https://github.com/so-fancy/diff-so-fancy
  "elixir"              # Elixir
  "emacs"               # emacs for doom
  "exa"                 # an enhanced, modern ls
  "exiftool"            # just in case
  "fd"			            # A replacement for find: https://github.com/sharkdp/fd
  "ffmpeg"              # ffmpeg for converting gif/videos
  "fzf"                 # fuzzy finder
  "gcc"                 # gnu compiler collection https://gcc.gnu.org/
  "git"                 # version control https://git-scm.com/
  "gnu-sed"             # get "standard" sed that is used on Linux.
  "gnu-sed"             # get standard sed from Linux.
  "go"                  # Go
  "imagemagick"         # image processing library
  "neovim"              # Neovim
  "node"                # Node
  "pandoc"              # markdown preview for emacs
  "postgresql"          # Postgresql
  "python"              # Python
  "rbenv"               # Ruby Env
  "ripgrep"             # A replacement for grep: https://github.com/BurntSushi/ripgrep
  "ruby-build"          # Ruby build
  "tmux"                # window management https://tmux.github.io/
  "tree"                # get the standard "tree" command on Linux.
  "wget"                # curl alternative https://www.gnu.org/software/wget/
  "zsh"                 # z-shell
)

#source install_functions.sh

echo "Backup configs and copy/create symlinks for personal configs"

mydir=`pwd`
backup="$HOME/.dotfiles-backup-`date +%s`"

# Copy doom config separately
cp $mydir/doom/init.el $HOME/.doom.d/init.el
cp $mydir/doom/config.el $HOME/.doom.d/config.el
echo "Copied doom init.el in the right place"

# Copy nvim config 
cp $mydir/nvim $HOME/.config/nvim
echo "Copied nvim config in the right place"

# Backup the stuff and create symlinks
for f in $mydir/rc/*; do

  file=`basename $f`
  dest="$HOME/.$file"
  source="$mydir/rc/$file"

  if [[ -f $dest || -d $dest ]]; then
    mkdir -p $backup
    echo "Making backup of $dest in $backup"
    cp -R $dest $backup/$file
  fi
  echo "Symlinking: .$file"
  ln -f -s $source $dest

done

echo "All Done! Enjoy!"
